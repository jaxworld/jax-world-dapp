"use strict";(self.webpackChunkjaxworld_dapp=self.webpackChunkjaxworld_dapp||[]).push([[7596],{91612:(t,r,e)=>{e.d(r,{C:()=>a});class a{constructor(t){this.contractWrapper=t}overrideNextTransaction(t){this.contractWrapper.withTransactionOverride(t)}}},44905:(t,r,e)=>{e.d(r,{C:()=>n});var a=e(64572),s=e(191),c=e(41662);class n{constructor(t){(0,a.Z)(this,"featureName",c.dn.name),(0,a.Z)(this,"set",(0,s.c)((async t=>{const r=await c.bJ.parseAsync(t);return s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPlatformFeeInfo",args:[r.platform_fee_recipient,r.platform_fee_basis_points]})}))),this.contractWrapper=t}async get(){const[t,r]=await this.contractWrapper.read("getPlatformFeeInfo",[]);return c.bJ.parseAsync({platform_fee_recipient:t,platform_fee_basis_points:r})}}},62985:(t,r,e)=>{e.d(r,{C:()=>n});var a=e(64572),s=e(191),c=e(41662);class n{constructor(t){(0,a.Z)(this,"featureName",c.d6.name),(0,a.Z)(this,"setRecipient",(0,s.c)((async t=>s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPrimarySaleRecipient",args:[t]})))),this.contractWrapper=t}async getRecipient(){return await this.contractWrapper.read("primarySaleRecipient",[])}}},83018:(t,r,e)=>{e.d(r,{S:()=>n});var a=e(64572),s=e(191),c=e(29037);class n{get chainId(){return this._chainId}constructor(t,r,e){(0,a.Z)(this,"transfer",(0,s.c)((async(t,r)=>this.erc20.transfer.prepare(t,r)))),(0,a.Z)(this,"transferFrom",(0,s.c)((async(t,r,e)=>this.erc20.transferFrom.prepare(t,r,e)))),(0,a.Z)(this,"setAllowance",(0,s.c)((async(t,r)=>this.erc20.setAllowance.prepare(t,r)))),(0,a.Z)(this,"transferBatch",(0,s.c)((async t=>this.erc20.transferBatch.prepare(t)))),this.contractWrapper=t,this.storage=r,this.erc20=new c.f(this.contractWrapper,this.storage,e),this._chainId=e}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async get(){return this.erc20.get()}async balance(){return await this.erc20.balance()}async balanceOf(t){return this.erc20.balanceOf(t)}async totalSupply(){return await this.erc20.totalSupply()}async allowance(t){return await this.erc20.allowance(t)}async allowanceOf(t,r){return await this.erc20.allowanceOf(t,r)}}},97596:(t,r,e)=>{e.r(r),e.d(r,{Token:()=>W});var a=e(64572),s=e(81895),c=e(41662),n=e(191),i=e(2399),o=e(80294),p=e(91612),h=e(44905),l=e(88609),d=e(62985),u=e(19560);class g{constructor(t,r){this.contractWrapper=t,this.events=r}async getAllHolderBalances(){const t=(await this.events.getEvents("Transfer")).map((t=>t.data)),r={};t.forEach((t=>{const e=null===t||void 0===t?void 0:t.from,a=null===t||void 0===t?void 0:t.to,c=null===t||void 0===t?void 0:t.value;e!==s.d&&(e in r||(r[e]=u.O$.from(0)),r[e]=r[e].sub(c)),a!==s.d&&(a in r||(r[a]=u.O$.from(0)),r[a]=r[a].add(c))}));const e=Object.entries(r),a=await Promise.all(e.map((t=>{let[,r]=t;return(0,o.a)(this.contractWrapper.getProvider(),this.contractWrapper.address,r)})));return e.map(((t,r)=>{let[e]=t;return{holder:e,balance:a[r]}}))}}var w=e(29037),f=e(83018);e(64166),e(79955),e(62349),e(89806);class W extends f.S{constructor(t,r,e){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},u=arguments.length>4?arguments[4]:void 0,f=arguments.length>5?arguments[5]:void 0;super(arguments.length>6&&void 0!==arguments[6]?arguments[6]:new c.cu(t,r,u,s,e),e,f),(0,a.Z)(this,"mint",(0,n.c)((async t=>this.erc20.mint.prepare(t)))),(0,a.Z)(this,"mintTo",(0,n.c)((async(t,r)=>this.erc20.mintTo.prepare(t,r)))),(0,a.Z)(this,"mintBatchTo",(0,n.c)((async t=>this.erc20.mintBatchTo.prepare(t)))),(0,a.Z)(this,"delegateTo",(0,n.c)((async t=>n.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"delegate",args:[await(0,c.aP)(t)]})))),(0,a.Z)(this,"burn",(0,n.c)((t=>this.erc20.burn.prepare(t)))),(0,a.Z)(this,"burnFrom",(0,n.c)((async(t,r)=>this.erc20.burnFrom.prepare(t,r)))),this.abi=c.bn.parse(u||[]),this.metadata=new i.C(this.contractWrapper,c.cd,this.storage),this.app=new i.b(this.contractWrapper,this.metadata,this.storage),this.roles=new l.C(this.contractWrapper,W.contractRoles),this.sales=new d.C(this.contractWrapper),this.events=new i.a(this.contractWrapper),this.history=new g(this.contractWrapper,this.events),this.encoder=new o.C(this.contractWrapper),this.estimator=new i.G(this.contractWrapper),this.platformFees=new h.C(this.contractWrapper),this.interceptor=new p.C(this.contractWrapper),this.signature=new w.e(this.contractWrapper,this.roles)}async getVoteBalance(){return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress())}async getVoteBalanceOf(t){return await this.erc20.getValue(await this.contractWrapper.read("getVotes",[t]))}async getDelegation(){return await this.getDelegationOf(await this.contractWrapper.getSignerAddress())}async getDelegationOf(t){return await this.contractWrapper.read("delegates",[await(0,c.aP)(t)])}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[(0,c.H)("transfer"),s.d])}async getMintTransaction(t,r){return this.erc20.getMintTransaction(t,r)}async prepare(t,r,e){return n.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}(0,a.Z)(W,"contractRoles",c.dz)}}]);