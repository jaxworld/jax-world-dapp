"use strict";(self.webpackChunkjaxworld_dapp=self.webpackChunkjaxworld_dapp||[]).push([[1186],{9341:(t,r,e)=>{e.d(r,{S:()=>s});var a=e(56986),n=e(99598);class s{get chainId(){return this._chainId}constructor(t,r,e){(0,a._)(this,"contractWrapper",void 0),(0,a._)(this,"storage",void 0),(0,a._)(this,"erc721",void 0),(0,a._)(this,"_chainId",void 0),(0,a._)(this,"transfer",(0,n.ds)((async(t,r)=>this.erc721.transfer.prepare(t,r)))),(0,a._)(this,"setApprovalForAll",(0,n.ds)((async(t,r)=>this.erc721.setApprovalForAll.prepare(t,r)))),(0,a._)(this,"setApprovalForToken",(0,n.ds)((async(t,r)=>n.aV.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approve",args:[await(0,n.cH)(t),r]})))),this.contractWrapper=t,this.storage=r,this.erc721=new n.au(this.contractWrapper,this.storage,e),this._chainId=e}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.readContract.address}async getAll(t){return this.erc721.getAll(t)}async getOwned(t){return t&&(t=await(0,n.cH)(t)),this.erc721.getOwned(t)}async getOwnedTokenIds(t){return t&&(t=await(0,n.cH)(t)),this.erc721.getOwnedTokenIds(t)}async totalSupply(){return this.erc721.totalCirculatingSupply()}async get(t){return this.erc721.get(t)}async ownerOf(t){return this.erc721.ownerOf(t)}async balanceOf(t){return this.erc721.balanceOf(t)}async balance(){return this.erc721.balance()}async isApproved(t,r){return this.erc721.isApproved(t,r)}}},21186:(t,r,e)=>{e.r(r),e.d(r,{NFTDrop:()=>p});var a=e(56986),n=e(99598),s=e(9341),i=e(55214),c=e(19560),o=e(81895);e(64166),e(62349),e(7605),e(60862),e(89806),e(79955);class p extends s.S{constructor(t,r,e){var s;let c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=arguments.length>4?arguments[4]:void 0,h=arguments.length>5?arguments[5]:void 0;super(arguments.length>6&&void 0!==arguments[6]?arguments[6]:new n.dz(t,r,o,c),e,h),s=this,(0,a._)(this,"abi",void 0),(0,a._)(this,"encoder",void 0),(0,a._)(this,"estimator",void 0),(0,a._)(this,"metadata",void 0),(0,a._)(this,"app",void 0),(0,a._)(this,"sales",void 0),(0,a._)(this,"platformFees",void 0),(0,a._)(this,"events",void 0),(0,a._)(this,"roles",void 0),(0,a._)(this,"interceptor",void 0),(0,a._)(this,"royalties",void 0),(0,a._)(this,"claimConditions",void 0),(0,a._)(this,"revealer",void 0),(0,a._)(this,"checkout",void 0),(0,a._)(this,"owner",void 0),(0,a._)(this,"createBatch",(0,n.ds)((async(t,r)=>this.erc721.lazyMint.prepare(t,r)))),(0,a._)(this,"claimTo",(0,n.ds)((async function(t,r){let e=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return s.erc721.claimTo.prepare(t,r,{checkERC20Allowance:e})}))),(0,a._)(this,"claim",(0,n.ds)((async function(t){let r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return s.claimTo.prepare(await s.contractWrapper.getSignerAddress(),t,r)}))),(0,a._)(this,"burn",(0,n.ds)((async t=>this.erc721.burn.prepare(t)))),(0,a._)(this,"transfer",(0,n.ds)((async(t,r)=>this.erc721.transfer.prepare(t,r)))),(0,a._)(this,"setApprovalForAll",(0,n.ds)((async(t,r)=>this.erc721.setApprovalForAll.prepare(t,r)))),(0,a._)(this,"setApprovalForToken",(0,n.ds)((async(t,r)=>n.aV.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approve",args:[t,r]})))),this.abi=n.e.parse(o||[]),this.metadata=new n.ag(this.contractWrapper,n.dM,this.storage),this.app=new n.a$(this.contractWrapper,this.metadata,this.storage),this.roles=new n.ah(this.contractWrapper,p.contractRoles),this.royalties=new n.ai(this.contractWrapper,this.metadata),this.sales=new n.aj(this.contractWrapper),this.claimConditions=new n.al(this.contractWrapper,this.metadata,this.storage),this.encoder=new n.af(this.contractWrapper),this.estimator=new n.aP(this.contractWrapper),this.events=new n.aQ(this.contractWrapper),this.platformFees=new n.aS(this.contractWrapper),this.revealer=new n.ak(this.contractWrapper,this.storage,n.dN.name,(()=>this.erc721.nextTokenIdToMint())),this.interceptor=new n.aR(this.contractWrapper),this.owner=new n.aU(this.contractWrapper),this.checkout=new i.a(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.readContract.address}async totalSupply(){const t=await this.totalClaimedSupply(),r=await this.totalUnclaimedSupply();return t.add(r)}async getAllClaimed(t){const r=c.O$.from((null===t||void 0===t?void 0:t.start)||0).toNumber(),e=c.O$.from((null===t||void 0===t?void 0:t.count)||a.c).toNumber(),n=Math.min((await this.contractWrapper.readContract.nextTokenIdToClaim()).toNumber(),r+e);return await Promise.all(Array.from(Array(n).keys()).map((t=>this.get(t.toString()))))}async getAllUnclaimed(t){const r=c.O$.from((null===t||void 0===t?void 0:t.start)||0).toNumber(),e=c.O$.from((null===t||void 0===t?void 0:t.count)||a.c).toNumber(),n=c.O$.from(Math.max((await this.contractWrapper.readContract.nextTokenIdToClaim()).toNumber(),r)),s=c.O$.from(Math.min((await this.contractWrapper.readContract.nextTokenIdToMint()).toNumber(),n.toNumber()+e));return await Promise.all(Array.from(Array(s.sub(n).toNumber()).keys()).map((t=>this.erc721.getTokenMetadata(n.add(t).toString()))))}async totalClaimedSupply(){return this.erc721.totalClaimedSupply()}async totalUnclaimedSupply(){return this.erc721.totalUnclaimedSupply()}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole((0,n.bE)("transfer"),o.d)}async getClaimTransaction(t,r){let e=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.erc721.getClaimTransaction(t,r,{checkERC20Allowance:e})}async get(t){return this.erc721.get(t)}async ownerOf(t){return this.erc721.ownerOf(t)}async balanceOf(t){return this.erc721.balanceOf(t)}async balance(){return this.erc721.balance()}async isApproved(t,r){return this.erc721.isApproved(t,r)}async prepare(t,r,e){return n.aV.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}(0,a._)(p,"contractRoles",["admin","minter","transfer"])},55214:(t,r,e)=>{e.d(r,{a:()=>h});var a=e(56986),n=e(99598),s=e(17389);const i="".concat("https://paper.xyz/api","/").concat("2022-08-12","/platform/thirdweb"),c={[n.cT.Mainnet]:"Ethereum",[n.cT.Goerli]:"Goerli",[n.cT.Polygon]:"Polygon",[n.cT.Mumbai]:"Mumbai",[n.cT.Avalanche]:"Avalanche"};async function o(t,r){const e=function(t){return(0,s.Z)(t in c,"chainId not supported by paper: ".concat(t)),c[t]}(r),a=await fetch("".concat(i,"/register-contract?contractAddress=").concat(t,"&chain=").concat(e)),n=await a.json();return(0,s.Z)(n.result.id,"Contract is not registered with paper"),n.result.id}const p={expiresInMinutes:15,feeBearer:"BUYER",sendEmailOnSuccess:!0,redirectAfterPayment:!1};class h{constructor(t){(0,a._)(this,"contractWrapper",void 0),this.contractWrapper=t}async getCheckoutId(){return o(this.contractWrapper.readContract.address,await this.contractWrapper.getChainID())}async isEnabled(){try{return!!await this.getCheckoutId()}catch(t){return!1}}async createLinkIntent(t){return await async function(t,r){const e=await fetch("".concat(i,"/checkout-link-intent"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contractId:t,...p,...r,metadata:{...r.metadata,via_platform:"thirdweb"},hideNativeMint:!0,hidePaperWallet:!!r.walletAddress,hideExternalWallet:!0,hidePayWithCrypto:!0,usePaperKey:!1})}),a=await e.json();return(0,s.Z)(a.checkoutLinkIntentUrl,"Failed to create checkout link intent"),a.checkoutLinkIntentUrl}(await this.getCheckoutId(),t)}}}}]);