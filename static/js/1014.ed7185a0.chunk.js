"use strict";(self.webpackChunkjaxworld_dapp=self.webpackChunkjaxworld_dapp||[]).push([[1014],{6889:(t,e,i)=>{i.d(e,{W:()=>r});var n=i(40744),s=i(20710),o=i(62349);class r extends o.Z{constructor(t){let{chains:e=s.gL9,options:i}=t;super(),(0,n._)(this,"id",void 0),(0,n._)(this,"name",void 0),(0,n._)(this,"chains",void 0),(0,n._)(this,"options",void 0),(0,n._)(this,"ready",void 0),this.chains=e,this.options=i}getBlockExplorerUrls(t){var e,i;const n=null!==(e=null===(i=t.explorers)||void 0===i?void 0:i.map((t=>t.url)))&&void 0!==e?e:[];return n.length>0?n:void 0}isChainUnsupported(t){return!this.chains.some((e=>e.chainId===t))}updateChains(t){this.chains=t}}},83458:(t,e,i)=>{i.d(e,{A:()=>r,C:()=>a,R:()=>h,S:()=>d,U:()=>u,a:()=>c});var n=i(40744);class s extends Error{constructor(t,e){const{cause:i,code:s,data:o}=e;if(!Number.isInteger(s))throw new Error('"code" must be an integer.');if(!t||"string"!==typeof t)throw new Error('"message" must be a nonempty string.');super(t),(0,n._)(this,"cause",void 0),(0,n._)(this,"code",void 0),(0,n._)(this,"data",void 0),this.cause=i,this.code=s,this.data=o}}class o extends s{constructor(t,e){const{cause:i,code:n,data:s}=e;if(!(Number.isInteger(n)&&n>=1e3&&n<=4999))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(t,{cause:i,code:n,data:s})}}class r extends Error{constructor(){super(...arguments),(0,n._)(this,"name","AddChainError"),(0,n._)(this,"message","Error adding chain")}}class a extends Error{constructor(t){let{chainId:e,connectorId:i}=t;super('Chain "'.concat(e,'" not configured for connector "').concat(i,'".')),(0,n._)(this,"name","ChainNotConfigured")}}class c extends Error{constructor(){super(...arguments),(0,n._)(this,"name","ConnectorNotFoundError"),(0,n._)(this,"message","Connector not found")}}class h extends s{constructor(t){super("Resource unavailable",{cause:t,code:-32002}),(0,n._)(this,"name","ResourceUnavailable")}}class d extends o{constructor(t){super("Error switching chain",{cause:t,code:4902}),(0,n._)(this,"name","SwitchChainError")}}class u extends o{constructor(t){super("User rejected request",{cause:t,code:4001}),(0,n._)(this,"name","UserRejectedRequestError")}}},93207:(t,e,i)=>{function n(t){return"string"===typeof t?Number.parseInt(t,"0x"===t.trim().substring(0,2)?16:10):"bigint"===typeof t?Number(t):t}i.d(e,{n:()=>n})},91014:(t,e,i)=>{i.d(e,{MetaMaskConnector:()=>p});var n=i(95768),s=i(40744),o=i(83458),r=i(99842),a=i(15920),c=i(28552),h=i(64249),d=i(52009),u=i(6889),l=i(93207);i(62349);var w=new WeakMap;class m extends u.W{constructor(t){const e={...{shimDisconnect:!0,getProvider:()=>{if((0,r.a)(globalThis.window))return globalThis.window.ethereum}},...t.options};super({chains:t.chains,options:e}),(0,s._)(this,"id",void 0),(0,s._)(this,"name",void 0),(0,s._)(this,"ready",void 0),(0,n._)(this,w,{writable:!0,value:void 0}),(0,s._)(this,"connectorStorage",void 0),(0,s._)(this,"shimDisconnectKey","injected.shimDisconnect"),(0,s._)(this,"onAccountsChanged",(async t=>{0===t.length?this.emit("disconnect"):this.emit("change",{account:c.getAddress(t[0])})})),(0,s._)(this,"onChainChanged",(t=>{const e=(0,l.n)(t),i=this.isChainUnsupported(e);this.emit("change",{chain:{id:e,unsupported:i}})})),(0,s._)(this,"onDisconnect",(async t=>{if(1013===t.code){if(await this.getProvider()){if(await this.getAccount())return}}this.emit("disconnect"),this.options.shimDisconnect&&await this.connectorStorage.removeItem(this.shimDisconnectKey)}));const i=e.getProvider();if("string"===typeof e.name)this.name=e.name;else if(i){const t=function(t){var e,i;if(!t)return"Injected";const n=t=>t.isAvalanche?"Core Wallet":t.isBitKeep?"BitKeep":t.isBraveWallet?"Brave Wallet":t.isCoinbaseWallet?"Coinbase Wallet":t.isExodus?"Exodus":t.isFrame?"Frame":t.isKuCoinWallet?"KuCoin Wallet":t.isMathWallet?"MathWallet":t.isOneInchIOSWallet||t.isOneInchAndroidWallet?"1inch Wallet":t.isOpera?"Opera":t.isPortal?"Ripio Portal":t.isTally?"Tally":t.isTokenPocket?"TokenPocket":t.isTokenary?"Tokenary":t.isTrust||t.isTrustWallet?"Trust Wallet":t.isMetaMask?"MetaMask":void 0;if(null!==(e=t.providers)&&void 0!==e&&e.length){var s;const e=new Set;let i=1;for(const s of t.providers){let t=n(s);t||(t="Unknown Wallet #".concat(i),i+=1),e.add(t)}const o=[...e];return o.length?o:null!==(s=o[0])&&void 0!==s?s:"Injected"}return null!==(i=n(t))&&void 0!==i?i:"Injected"}(i);e.name?this.name=e.name(t):this.name="string"===typeof t?t:t[0]}else this.name="Injected";this.id="injected",this.ready=!!i,this.connectorStorage=t.connectorStorage}async connect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{const i=await this.getProvider();if(!i)throw new o.a;this.setupListeners(),this.emit("message",{type:"connecting"});const n=await i.request({method:"eth_requestAccounts"}),s=c.getAddress(n[0]);let r=await this.getChainId(),a=this.isChainUnsupported(r);if(t.chainId&&r!==t.chainId)try{await this.switchChain(t.chainId),r=t.chainId,a=this.isChainUnsupported(t.chainId)}catch(e){console.error("Could not switch to chain id: ".concat(t.chainId),e)}this.options.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");const h={account:s,chain:{id:r,unsupported:a},provider:i};return this.emit("connect",h),h}catch(i){if(this.isUserRejectedRequestError(i))throw new o.U(i);if(-32002===i.code)throw new o.R(i);throw i}}async disconnect(){const t=await this.getProvider();null!==t&&void 0!==t&&t.removeListener&&(t.removeListener("accountsChanged",this.onAccountsChanged),t.removeListener("chainChanged",this.onChainChanged),t.removeListener("disconnect",this.onDisconnect),this.options.shimDisconnect&&await this.connectorStorage.removeItem(this.shimDisconnectKey))}async getAccount(){const t=await this.getProvider();if(!t)throw new o.a;const e=await t.request({method:"eth_accounts"});return c.getAddress(e[0])}async getChainId(){const t=await this.getProvider();if(!t)throw new o.a;return t.request({method:"eth_chainId"}).then(l.n)}async getProvider(){const t=this.options.getProvider();return t&&(0,n.a)(this,w,t),(0,n.b)(this,w)}async getSigner(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const[e,i]=await Promise.all([this.getProvider(),this.getAccount()]);return new h.Q(e,t).getSigner(i)}async isAuthorized(){try{if(this.options.shimDisconnect&&!Boolean(await this.connectorStorage.getItem(this.shimDisconnectKey)))return!1;if(!await this.getProvider())throw new o.a;return!!await this.getAccount()}catch{return!1}}async switchChain(t){const e=await this.getProvider();if(!e)throw new o.a;const i=d.hexValue(t);try{await e.request({method:"wallet_switchEthereumChain",params:[{chainId:i}]});const n=this.chains.find((e=>e.chainId===t));return n||{chainId:t,name:"Chain ".concat(i),slug:"".concat(i),nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],chain:"",shortName:"",testnet:!0}}catch(r){var n,s;const c=this.chains.find((e=>e.chainId===t));if(!c)throw new o.C({chainId:t,connectorId:this.id});if(4902===r.code||4902===(null===r||void 0===r||null===(n=r.data)||void 0===n||null===(s=n.originalError)||void 0===s?void 0:s.code))try{return await e.request({method:"wallet_addEthereumChain",params:[{chainId:i,chainName:c.name,nativeCurrency:c.nativeCurrency,rpcUrls:c.rpc,blockExplorerUrls:this.getBlockExplorerUrls(c)}]}),c}catch(a){if(this.isUserRejectedRequestError(a))throw new o.U(r);throw new o.A}if(this.isUserRejectedRequestError(r))throw new o.U(r);throw new o.S(r)}}async setupListeners(){const t=await this.getProvider();t.on&&(t.on("accountsChanged",this.onAccountsChanged),t.on("chainChanged",this.onChainChanged),t.on("disconnect",this.onDisconnect))}isUserRejectedRequestError(t){return 4001===t.code}}var g=new WeakMap;class p extends m{constructor(t){const e={...{name:"MetaMask",shimDisconnect:!0,shimChainChangedDisconnect:!0,getProvider(){function t(t){if(!(null===t||void 0===t||!t.isMetaMask)&&(!t.isBraveWallet||t._events||t._state)&&!t.isAvalanche&&!t.isKuCoinWallet&&!t.isPortal&&!t.isTokenPocket&&!t.isTokenary)return t}var e;if((0,r.a)(globalThis.window))return null!==(e=globalThis.window.ethereum)&&void 0!==e&&e.providers?globalThis.window.ethereum.providers.find(t):t(globalThis.window.ethereum)}},...t.options};super({chains:t.chains,options:e,connectorStorage:t.connectorStorage}),(0,s._)(this,"id",a.w.metamask),(0,n._)(this,g,{writable:!0,value:void 0}),(0,n.a)(this,g,e.UNSTABLE_shimOnConnectSelectAccount)}async connect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{var e,i;const a=await this.getProvider();if(!a)throw new o.a;this.setupListeners(),this.emit("message",{type:"connecting"});let h=null;if((0,n.b)(this,g)&&null!==(e=this.options)&&void 0!==e&&e.shimDisconnect&&!Boolean(this.connectorStorage.getItem(this.shimDisconnectKey))){h=await this.getAccount().catch((()=>null));if(!!h)try{await a.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}catch(s){if(this.isUserRejectedRequestError(s))throw new o.U(s)}}if(!h){const t=await a.request({method:"eth_requestAccounts"});h=c.getAddress(t[0])}let d=await this.getChainId(),u=this.isChainUnsupported(d);if(t.chainId&&d!==t.chainId)try{await this.switchChain(t.chainId),d=t.chainId,u=this.isChainUnsupported(t.chainId)}catch(r){console.error("Could not switch to chain id : ".concat(t.chainId),r)}null!==(i=this.options)&&void 0!==i&&i.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");const l={chain:{id:d,unsupported:u},provider:a,account:h};return this.emit("connect",l),l}catch(s){if(this.isUserRejectedRequestError(s))throw new o.U(s);if(-32002===s.code)throw new o.R(s);throw s}}async switchAccount(){const t=await this.getProvider();await t.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}}}}]);